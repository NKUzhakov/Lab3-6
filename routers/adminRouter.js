const express = require('express');
const router = express.Router();
const Train = require('../models/Train'); 

router.get('/', (req, res) => {
    const trains = Train.getAll(data=>{
        res.render('admin', { trains: data});
    });
    
});

router.post('/add', (req, res) => {
    const { name, from, to, time } = req.body;
    if (!name || !from || !to || !time) {
        console.error("–ü–û–ú–ò–õ–ö–ê: –£—Å—ñ –ø–æ–ª—è –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ!");
        return res.status(400).send("–£—Å—ñ –ø–æ–ª—è –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ!");
    }
    Train.addTrain({ name, from, to, time }).then(()=>{res.redirect('/admin');})
                                            .catch((err)=>{
                                                return res.status(400).send(err);
                                            });
    
});


router.post('/delete/', (req, res) => {
    console.log("üóë –û—Ç—Ä–∏–º–∞–Ω–æ –∑–∞–ø–∏—Ç –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Ç—è–≥–∞, ID:", req.body.id);

    if (!req.body.id) {
        console.error("‚ùå –ü–û–ú–ò–õ–ö–ê: ID –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ!");
        return res.status(400).send("<h1>‚ùå –ü–û–ú–ò–õ–ö–ê: ID –ø–æ—Ç—è–≥–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ!</h1>");
    }

    const success = Train.deleteTrain(req.body.id);
    if (!success) {
        console.error("‚ùå –ü–û–ú–ò–õ–ö–ê: –ü–æ—Ç—è–≥ –∑ —Ç–∞–∫–∏–º ID –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!");
        return res.status(400).send("<h1>‚ùå –ü–û–ú–ò–õ–ö–ê: –ü–æ—Ç—è–≥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!</h1>");
    }

    console.log("‚úÖ –ü–æ—Ç—è–≥ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!");
    res.redirect('/admin');  // üî• –ü–†–ê–í–ò–õ–¨–ù–ï –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ù–Ø
});
router.post('/updateform',(req, res) => {
    Train.getById(req.body.id, train=>{
        res.render('admin_update', { train });
    })
});
router.post('/update/',(req, res) => {
    const train = req.body;
    const {id, name, from, to, time } = train
    if (!name || !from || !to || !time) {
        console.error("–ü–û–ú–ò–õ–ö–ê: –£—Å—ñ –ø–æ–ª—è –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ!");
        return res.status(400).send("–£—Å—ñ –ø–æ–ª—è –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ!");
    }
    
    
    Train.updateTrain(id, { name, from, to, time }).then(()=>{res.redirect('/admin');})
    .catch((err)=>{
        return res.status(400).send(err);
    });

}) 
module.exports = router;
